networks:
  locust-network:
    driver: bridge

services:
  locust-master:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: locust-master
    command: locust -f /mnt/locust/locustfile.py --master --master-bind-host=0.0.0.0 --master-bind-port=5557
    ports:
      - "8089:8089"
      - "5557:5557"
    volumes:
      - /root/locust/:/mnt/locust
    networks:
      - locust-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s

  locust-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: locust -f /mnt/locust/locustfile.py --worker --master-host=locust-master --master-port=5557
    volumes:
      - /root/locust/:/mnt/locust
    networks:
      - locust-network
    depends_on:
      locust-master:
        condition: service_healthy

  locust-metrics-exporter:
    image: containersol/locust_exporter
    container_name: locust-metrics-exporter
    ports:
      - "9646:9646"
    environment:
      - LOCUST_EXPORTER_URI=http://locust-master:8089
    networks:
      - locust-network
    depends_on:
      locust-master:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - locust-network

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    networks:
      - locust-network
